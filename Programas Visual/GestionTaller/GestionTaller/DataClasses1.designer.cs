#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionTaller
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestionTaller")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertMoldes(Moldes instance);
    partial void UpdateMoldes(Moldes instance);
    partial void DeleteMoldes(Moldes instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertOperacion(Operacion instance);
    partial void UpdateOperacion(Operacion instance);
    partial void DeleteOperacion(Operacion instance);
    partial void InsertOT(OT instance);
    partial void UpdateOT(OT instance);
    partial void DeleteOT(OT instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::GestionTaller.Properties.Settings.Default.ConexionGestionTaller, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Moldes> Moldes
		{
			get
			{
				return this.GetTable<Moldes>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Operacion> Operacion
		{
			get
			{
				return this.GetTable<Operacion>();
			}
		}
		
		public System.Data.Linq.Table<OT> OT
		{
			get
			{
				return this.GetTable<OT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Moldes")]
	public partial class Moldes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Cliente;
		
		private System.DateTime _FechaEntrada;
		
		private System.Nullable<System.DateTime> _FechaSalida;
		
		private EntitySet<OT> _OT;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnClienteChanging(string value);
    partial void OnClienteChanged();
    partial void OnFechaEntradaChanging(System.DateTime value);
    partial void OnFechaEntradaChanged();
    partial void OnFechaSalidaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaSalidaChanged();
    #endregion
		
		public Moldes()
		{
			this._OT = new EntitySet<OT>(new Action<OT>(this.attach_OT), new Action<OT>(this.detach_OT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente", DbType="NVarChar(50)")]
		public string Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				if ((this._Cliente != value))
				{
					this.OnClienteChanging(value);
					this.SendPropertyChanging();
					this._Cliente = value;
					this.SendPropertyChanged("Cliente");
					this.OnClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaEntrada", DbType="DateTime NOT NULL")]
		public System.DateTime FechaEntrada
		{
			get
			{
				return this._FechaEntrada;
			}
			set
			{
				if ((this._FechaEntrada != value))
				{
					this.OnFechaEntradaChanging(value);
					this.SendPropertyChanging();
					this._FechaEntrada = value;
					this.SendPropertyChanged("FechaEntrada");
					this.OnFechaEntradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaSalida", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaSalida
		{
			get
			{
				return this._FechaSalida;
			}
			set
			{
				if ((this._FechaSalida != value))
				{
					this.OnFechaSalidaChanging(value);
					this.SendPropertyChanging();
					this._FechaSalida = value;
					this.SendPropertyChanged("FechaSalida");
					this.OnFechaSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moldes_OT", Storage="_OT", ThisKey="Id", OtherKey="IdMolde")]
		public EntitySet<OT> OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				this._OT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OT(OT entity)
		{
			this.SendPropertyChanging();
			entity.Moldes = this;
		}
		
		private void detach_OT(OT entity)
		{
			this.SendPropertyChanging();
			entity.Moldes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Cargo;
		
		private string _Telefono;
		
		private EntitySet<Operacion> _Operacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnCargoChanging(string value);
    partial void OnCargoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Empleado()
		{
			this._Operacion = new EntitySet<Operacion>(new Action<Operacion>(this.attach_Operacion), new Action<Operacion>(this.detach_Operacion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this.OnCargoChanging(value);
					this.SendPropertyChanging();
					this._Cargo = value;
					this.SendPropertyChanged("Cargo");
					this.OnCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Operacion", Storage="_Operacion", ThisKey="Id", OtherKey="nEmpleado")]
		public EntitySet<Operacion> Operacion
		{
			get
			{
				return this._Operacion;
			}
			set
			{
				this._Operacion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Operacion(Operacion entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Operacion(Operacion entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operacion")]
	public partial class Operacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private System.Nullable<System.TimeSpan> _Horas;
		
		private int _NumeroOT;
		
		private int _nEmpleado;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<OT> _OT;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnHorasChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHorasChanged();
    partial void OnNumeroOTChanging(int value);
    partial void OnNumeroOTChanged();
    partial void OnnEmpleadoChanging(int value);
    partial void OnnEmpleadoChanged();
    #endregion
		
		public Operacion()
		{
			this._Empleado = default(EntityRef<Empleado>);
			this._OT = default(EntityRef<OT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Horas", DbType="Time")]
		public System.Nullable<System.TimeSpan> Horas
		{
			get
			{
				return this._Horas;
			}
			set
			{
				if ((this._Horas != value))
				{
					this.OnHorasChanging(value);
					this.SendPropertyChanging();
					this._Horas = value;
					this.SendPropertyChanged("Horas");
					this.OnHorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroOT", DbType="Int NOT NULL")]
		public int NumeroOT
		{
			get
			{
				return this._NumeroOT;
			}
			set
			{
				if ((this._NumeroOT != value))
				{
					if (this._OT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroOTChanging(value);
					this.SendPropertyChanging();
					this._NumeroOT = value;
					this.SendPropertyChanged("NumeroOT");
					this.OnNumeroOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nEmpleado", DbType="Int NOT NULL")]
		public int nEmpleado
		{
			get
			{
				return this._nEmpleado;
			}
			set
			{
				if ((this._nEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._nEmpleado = value;
					this.SendPropertyChanged("nEmpleado");
					this.OnnEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Operacion", Storage="_Empleado", ThisKey="nEmpleado", OtherKey="Id", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Operacion.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Operacion.Add(this);
						this._nEmpleado = value.Id;
					}
					else
					{
						this._nEmpleado = default(int);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OT_Operacion", Storage="_OT", ThisKey="NumeroOT", OtherKey="Id", IsForeignKey=true)]
		public OT OT
		{
			get
			{
				return this._OT.Entity;
			}
			set
			{
				OT previousValue = this._OT.Entity;
				if (((previousValue != value) 
							|| (this._OT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OT.Entity = null;
						previousValue.Operacion.Remove(this);
					}
					this._OT.Entity = value;
					if ((value != null))
					{
						value.Operacion.Add(this);
						this._NumeroOT = value.Id;
					}
					else
					{
						this._NumeroOT = default(int);
					}
					this.SendPropertyChanged("OT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OT")]
	public partial class OT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Número;
		
		private int _IdMolde;
		
		private System.Nullable<System.TimeSpan> _HorasTrabajo;
		
		private string _Tipo;
		
		private string _Cliente;
		
		private EntitySet<Operacion> _Operacion;
		
		private EntityRef<Moldes> _Moldes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNúmeroChanging(int value);
    partial void OnNúmeroChanged();
    partial void OnIdMoldeChanging(int value);
    partial void OnIdMoldeChanged();
    partial void OnHorasTrabajoChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHorasTrabajoChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnClienteChanging(string value);
    partial void OnClienteChanged();
    #endregion
		
		public OT()
		{
			this._Operacion = new EntitySet<Operacion>(new Action<Operacion>(this.attach_Operacion), new Action<Operacion>(this.detach_Operacion));
			this._Moldes = default(EntityRef<Moldes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Número", DbType="Int NOT NULL")]
		public int Número
		{
			get
			{
				return this._Número;
			}
			set
			{
				if ((this._Número != value))
				{
					this.OnNúmeroChanging(value);
					this.SendPropertyChanging();
					this._Número = value;
					this.SendPropertyChanged("Número");
					this.OnNúmeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMolde", DbType="Int NOT NULL")]
		public int IdMolde
		{
			get
			{
				return this._IdMolde;
			}
			set
			{
				if ((this._IdMolde != value))
				{
					if (this._Moldes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMoldeChanging(value);
					this.SendPropertyChanging();
					this._IdMolde = value;
					this.SendPropertyChanged("IdMolde");
					this.OnIdMoldeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HorasTrabajo", DbType="Time")]
		public System.Nullable<System.TimeSpan> HorasTrabajo
		{
			get
			{
				return this._HorasTrabajo;
			}
			set
			{
				if ((this._HorasTrabajo != value))
				{
					this.OnHorasTrabajoChanging(value);
					this.SendPropertyChanging();
					this._HorasTrabajo = value;
					this.SendPropertyChanged("HorasTrabajo");
					this.OnHorasTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente", DbType="NVarChar(50)")]
		public string Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				if ((this._Cliente != value))
				{
					this.OnClienteChanging(value);
					this.SendPropertyChanging();
					this._Cliente = value;
					this.SendPropertyChanged("Cliente");
					this.OnClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OT_Operacion", Storage="_Operacion", ThisKey="Id", OtherKey="NumeroOT")]
		public EntitySet<Operacion> Operacion
		{
			get
			{
				return this._Operacion;
			}
			set
			{
				this._Operacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Moldes_OT", Storage="_Moldes", ThisKey="IdMolde", OtherKey="Id", IsForeignKey=true)]
		public Moldes Moldes
		{
			get
			{
				return this._Moldes.Entity;
			}
			set
			{
				Moldes previousValue = this._Moldes.Entity;
				if (((previousValue != value) 
							|| (this._Moldes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Moldes.Entity = null;
						previousValue.OT.Remove(this);
					}
					this._Moldes.Entity = value;
					if ((value != null))
					{
						value.OT.Add(this);
						this._IdMolde = value.Id;
					}
					else
					{
						this._IdMolde = default(int);
					}
					this.SendPropertyChanged("Moldes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Operacion(Operacion entity)
		{
			this.SendPropertyChanging();
			entity.OT = this;
		}
		
		private void detach_Operacion(Operacion entity)
		{
			this.SendPropertyChanging();
			entity.OT = null;
		}
	}
}
#pragma warning restore 1591
